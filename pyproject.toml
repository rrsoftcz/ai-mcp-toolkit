[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ai-mcp-toolkit"
dynamic = ["version"]
description = "AI-powered text processing toolkit built on MCP protocol with Ollama integration"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["ai", "mcp", "text-processing", "ollama", "nlp", "agents"]
requires-python = ">=3.11"
dependencies = [
    "mcp>=1.0.0",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "ollama>=0.3.0",
    "pydantic>=2.5.0",
    "typer>=0.9.0",
    "rich>=13.0.0",
    "unidecode>=1.3.8",
    "langdetect>=1.0.9",
    "textstat>=0.7.3",
    "spacy>=3.7.0",
    "nltk>=3.8.1",
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "aiofiles>=23.2.0",
    "aiohttp>=3.8.0",
    "beautifulsoup4>=4.12.0",
    "chardet>=5.2.0",
    "jinja2>=3.1.0",
    "python-multipart>=0.0.6",
    "websockets>=11.0.0",
    "asyncio-mqtt>=0.16.0",
    "pyyaml>=6.0.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "isort>=5.12.0",
    "bandit>=1.7.5",
]
ui = [
    "streamlit>=1.28.0",
    "plotly>=5.17.0",
    "pandas>=2.1.0",
]
docker = [
    "gunicorn>=21.2.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/ai-mcp-toolkit"
Documentation = "https://github.com/yourusername/ai-mcp-toolkit/blob/main/docs/"
Repository = "https://github.com/yourusername/ai-mcp-toolkit.git"
"Bug Tracker" = "https://github.com/yourusername/ai-mcp-toolkit/issues"

[project.scripts]
ai-mcp-toolkit = "ai_mcp_toolkit.cli:main"

[tool.hatch.version]
path = "src/ai_mcp_toolkit/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/ai_mcp_toolkit"]

[tool.black]
target-version = ['py311', 'py312', 'py313']
line-length = 88
skip-string-normalization = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=ai_mcp_toolkit",
    "--cov-report=term-missing",
    "--cov-report=html",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/ai_mcp_toolkit"]
omit = ["*/tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
